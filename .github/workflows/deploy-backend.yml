name: Deploy Backend to ECS

on:
  push:
    branches:
      - main
    paths:
        - backend/**
        - docker/**
        - .github/workflows/deploy-backend.yml

jobs:
  lint:
    runs-on: ubuntu-latest
    name: Test
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "20"

      - name: Remove root ESLint config
        working-directory: ./
        run: rm .eslintrc.json

      - name: Install dependencies
        working-directory: ./backend
        run: npm install

      - name: Run linter
        working-directory: ./backend
        run: npm run linter

      - name: Run tests
        working-directory: ./backend
        run: npm run test

  deploy:
    runs-on: ubuntu-latest
    name: Deploy
    needs: lint

    defaults:
      run:
        working-directory: .

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Remove root ESLint config
        working-directory: ./
        run: rm .eslintrc.json

      - name: Log in to AWS
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
        run: |
          echo $AWS_ACCESS_KEY_ID
          aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
          aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
          aws configure set region $AWS_REGION

      - name: Log in to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2
        with:
          registries: ${{ secrets.AWS_ACCOUNT_ID }}

      - name: Build and Tag Docker Image
        run: |
          echo "${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.eu-west-3.amazonaws.com/linventaireapp:latest"
          docker build -f docker/node.Dockerfile --build-arg SENTRY_AUTH_TOKEN=${{ secrets.SENTRY_AUTH_TOKEN }} -t linventaireapp .
          docker tag linventaireapp:latest ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.eu-west-3.amazonaws.com/linventaireapp:latest
          export VERSION=$(git describe --tags --always)
          docker tag linventaireapp:latest ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.eu-west-3.amazonaws.com/linventaireapp:$VERSION

      - name: Push Docker Image to ECR
        run: |
          docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.eu-west-3.amazonaws.com/linventaireapp:latest

      - name: Update ECS Service
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
        run: |
          aws ecs update-service --cluster ${{ secrets.ECS_CLUSTER }} --service ${{ secrets.ECS_SERVICE }} --force-new-deployment
